{"version":3,"sources":["components/Card.jsx","components/Nom.jsx","components/Submitted.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","id","index","onClick","nomBtn","title","key","target","rel","href","imdb","year","Nom","removeBtn","Submitted","submit","nomList","map","movie","imdbID","Title","Year","reset","App","useState","search","setSearch","movies","setMovie","setNomList","over","setOver","setSubmit","hideNom","setHideNom","nomTemp","slice","searchVar","movieData","Response","Search","handleNomBtn","e","length","push","handleRemove","foundIndex","findIndex","obj","splice","handleReset","useEffect","a","fetch","movieAPI","json","state","console","log","apiFetch","i","k","movieIndex","removed","placeholder","type","value","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb78eee5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"d-flex m-2 align-items-center\">\n      <button\n        key={props.key}\n        id={props.index}\n        onClick={props.nomBtn}\n        title={props.title}\n        // onDoubleClick={handleToggle}\n        className={\" btn btn-warning mr-2\"}>\n        Nominate\n      </button>\n      <div className=\"mx-2\">\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={\"https://www.imdb.com/title/\" + props.imdb}\n          className=\"link-info\">\n          {props.title + \" (\" + props.year + \")\"}\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","const Nom = (props) => {\n  return (\n    <div className=\"d-flex align-items-center m-2 \">\n      <button\n        className=\"btn btn-secondary mr-2\"\n        onClick={props.removeBtn}\n        title={props.title}\n        id={props.index}>\n        Remove\n      </button>\n      <div className=\"mx-2\">\n        {\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={\"https://www.imdb.com/title/\" + props.imdb}\n          className=\"link-danger\">\n          {props.title + \" (\" + props.year + \")\"}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Nom;\n","const Submitted = (props) => {\n  return (\n    <div className={props.submit + \" border-2 border  rounded border-dark\"}>\n      <h1 className=\"text-warning roboto\">Here Are Your Nominees:</h1>\n      {props.nomList.map((movie, index) => (\n        <div className=\"m-2 roboto\">\n          {\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={\"https://www.imdb.com/title/\" + movie.imdbID}\n            className=\"link-danger  h5 \">\n            {movie.Title + \" (\" + movie.Year + \")\"}\n          </a>\n        </div>\n      ))}\n      <button onClick={props.reset} className=\"btn btn-danger mt-3 mx-2\">\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default Submitted;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport Nom from \"./components/Nom\";\nimport Submitted from \"./components/Submitted\";\n\nconst App = () => {\n  const [search, setSearch] = useState(\"\");\n  const [movies, setMovie] = useState([]);\n  const [nomList, setNomList] = useState([]);\n  const [over, setOver] = useState(\"notOver\");\n  const [submit, setSubmit] = useState(\"notSubbed\");\n  const [hideNom, setHideNom] = useState(\"notHidden\");\n\n  let nomTemp = nomList.slice();\n  let searchVar = \"\";\n  let movieData = { Response: \"False\", Search: [{ Title: \"Enter Movie\" }] };\n\n  // search bar state change function\n  const handleSearchChange = (e) => {\n    searchVar = e.target.value;\n    setSearch(searchVar);\n    console.log();\n  };\n  // nomination button\n  const handleNomBtn = (e) => {\n    if (nomList.length < 5) {\n      nomTemp.push(movies[e.target.id]);\n      setNomList(nomTemp);\n    }\n  };\n  // remove nomination from list\n  const handleRemove = (e) => {\n    let foundIndex = nomTemp.findIndex((obj) => obj.Title == e.target.title);\n    nomTemp.splice(foundIndex, 1);\n    setNomList(nomTemp);\n  };\n\n  // handle submit classes/states\n  const handleSubmit = () => {\n    setSubmit(\"submitted\");\n    setHideNom(\"hideNom\");\n  };\n\n  // resets states to initial\n  const handleReset = () => {\n    setSearch(\"\");\n    setMovie([]);\n    setNomList([]);\n    setOver(\"notOver\");\n    setSubmit(\"notSubbed\");\n    setHideNom(\"notHidden\");\n  };\n  // fetches api on search state changes and nomlist change (remove button)\n  useEffect(() => {\n    async function apiFetch() {\n      try {\n        const movieAPI = await fetch(\n          \"https://www.omdbapi.com/?apikey=2be7a6b9&s=\" + search + \"&type=movie\"\n        );\n        movieData = await movieAPI.json();\n        if (movieData.Response !== \"False\") {\n          setMovie((state) => movieData.Search);\n        }\n      } catch {\n        console.log(\"error\");\n      }\n    }\n    if (search !== \"\") {\n      apiFetch();\n    }\n  }, [search, nomList]);\n  // matches nom list with movie list to remove from selection on render\n  useEffect(() => {\n    for (var i = 0; i < movies.length; i++) {\n      for (let k = 0; k < nomTemp.length; k++) {\n        if (nomTemp[k].imdbID === movies[i].imdbID) {\n          let movieIndex = movies.findIndex(\n            (obj) => obj.imdbID == nomTemp[k].imdbID\n          );\n          let removed = movies.slice();\n          removed.splice(movieIndex, 1);\n          setMovie((state) => removed);\n          return;\n        }\n      }\n    }\n    if (nomList.length === 5) {\n      setOver(\"over\");\n    } else {\n      setOver(\"notOver\");\n    }\n  });\n\n  return (\n    <div className=\"d-flex flex-column align-items-center  mainApp  \">\n      <h1 className=\"title my-2\">The Shoppies</h1>\n      <input\n        placeholder=\"search\"\n        className=\"mt-1 form-control w-50\"\n        type=\"text\"\n        id=\"search\"\n        value={search}\n        onChange={handleSearchChange}></input>\n      <h5 className=\"mt-2 title \">Enter Movie Title</h5>\n\n      <div className=\"row justify-content-center  nomArea  mt-4 mb-3\">\n        <div\n          className={\n            hideNom +\n            \" col-lg-5 border border-2 border-muted  rounded bg-dark mx-3  \"\n          }>\n          <h4 className=\"mx-2 roboto mt-4 text-light\">Movies:</h4>\n          <div className=\"mb-4\">\n            {movies.map((movie, index) => (\n              <Card\n                nomBtn={handleNomBtn}\n                key={index}\n                index={index}\n                title={movie.Title}\n                year={movie.Year}\n                imdb={movie.imdbID}\n                // toggle={toggleBtn}\n              />\n            ))}\n          </div>\n        </div>\n\n        <div\n          className={\n            hideNom +\n            \" col-lg-5 border border-2 rounded border-muted mx-3 nomSection   \"\n          }>\n          <h4 className=\"mx-2 mt-4 roboto\">Nominations:</h4>\n          <div className=\"mb-4\">\n            <div className={over}>\n              <h5 className=\"m-2 roboto\">You've chosen 5 Nominations</h5>{\" \"}\n              <div className=\"d-flex\">\n                <button\n                  className=\"btn-sm btn btn-danger resetBtn m-2\"\n                  onClick={handleReset}>\n                  Reset\n                </button>\n                <button\n                  className=\"btn-sm btn btn-success m-2\"\n                  onClick={handleSubmit}>\n                  Submit\n                </button>\n              </div>\n            </div>\n            {nomList.map((movie, index) => (\n              <Nom\n                key={index}\n                removeBtn={handleRemove}\n                index={index}\n                title={movie.Title}\n                year={movie.Year}\n                imdb={movie.imdbID}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <Submitted nomList={nomList} submit={submit} reset={handleReset} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}