[{"/home/jdonne/projects/intern-challenge/src/index.js":"1","/home/jdonne/projects/intern-challenge/src/App.js":"2","/home/jdonne/projects/intern-challenge/src/reportWebVitals.js":"3","/home/jdonne/projects/intern-challenge/src/components/Card.jsx":"4","/home/jdonne/projects/intern-challenge/src/components/Nom.jsx":"5","/home/jdonne/projects/intern-challenge/src/components/Submitted.jsx":"6"},{"size":500,"mtime":1610731690846,"results":"7","hashOfConfig":"8"},{"size":4499,"mtime":1610824596364,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610731690846,"results":"10","hashOfConfig":"8"},{"size":623,"mtime":1610824469524,"results":"11","hashOfConfig":"8"},{"size":530,"mtime":1610824598152,"results":"12","hashOfConfig":"8"},{"size":522,"mtime":1610824600164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"i84b84",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jdonne/projects/intern-challenge/src/index.js",[],["27","28"],"/home/jdonne/projects/intern-challenge/src/App.js",["29","30","31","32"],"/home/jdonne/projects/intern-challenge/src/reportWebVitals.js",[],"/home/jdonne/projects/intern-challenge/src/components/Card.jsx",["33"],"/home/jdonne/projects/intern-challenge/src/components/Nom.jsx",[],"/home/jdonne/projects/intern-challenge/src/components/Submitted.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":52,"column":59,"nodeType":"40","messageId":"41","endLine":52,"endColumn":61},{"ruleId":"42","severity":1,"message":"43","line":78,"column":21,"nodeType":"44","endLine":78,"endColumn":42},{"ruleId":"42","severity":1,"message":"45","line":94,"column":3,"nodeType":"46","endLine":94,"endColumn":12,"suggestions":"47"},{"ruleId":"38","severity":1,"message":"39","line":101,"column":33,"nodeType":"40","messageId":"41","endLine":101,"endColumn":35},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"50","endLine":1,"endColumn":25},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'movieData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","React Hook useEffect contains a call to 'setMovie'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [movies, nomList.length, nomTemp] as a second argument to the useEffect Hook.","Identifier",["53"],"no-unused-vars","'useState' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Add dependencies array: [movies, nomList.length, nomTemp]",{"range":"56","text":"57"},[3255,3255],", [movies, nomList.length, nomTemp]"]