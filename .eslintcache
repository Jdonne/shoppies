[{"/home/jdonne/projects/intern-challenge/src/index.js":"1","/home/jdonne/projects/intern-challenge/src/App.js":"2","/home/jdonne/projects/intern-challenge/src/reportWebVitals.js":"3","/home/jdonne/projects/intern-challenge/src/components/Card.jsx":"4","/home/jdonne/projects/intern-challenge/src/components/Nom.jsx":"5","/home/jdonne/projects/intern-challenge/src/components/Submitted.jsx":"6"},{"size":500,"mtime":1610731690846,"results":"7","hashOfConfig":"8"},{"size":4983,"mtime":1610924670538,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610731690846,"results":"10","hashOfConfig":"8"},{"size":673,"mtime":1610917995090,"results":"11","hashOfConfig":"8"},{"size":583,"mtime":1610924196830,"results":"12","hashOfConfig":"8"},{"size":706,"mtime":1610924766498,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i84b84",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jdonne/projects/intern-challenge/src/index.js",[],"/home/jdonne/projects/intern-challenge/src/App.js",["28","29","30","31"],"/home/jdonne/projects/intern-challenge/src/reportWebVitals.js",[],"/home/jdonne/projects/intern-challenge/src/components/Card.jsx",["32"],"import React, { useState } from \"react\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"d-flex m-2 align-items-center\">\n      <button\n        key={props.key}\n        id={props.index}\n        onClick={props.nomBtn}\n        title={props.title}\n        // onDoubleClick={handleToggle}\n        className={\" btn btn-warning mr-2\"}>\n        Nominate\n      </button>\n      <div className=\"mx-2\">\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={\"https://www.imdb.com/title/\" + props.imdb}\n          className=\"link-info\">\n          {props.title + \" (\" + props.year + \")\"}\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n",["33","34"],"/home/jdonne/projects/intern-challenge/src/components/Nom.jsx",[],"/home/jdonne/projects/intern-challenge/src/components/Submitted.jsx",[],{"ruleId":"35","severity":1,"message":"36","line":34,"column":59,"nodeType":"37","messageId":"38","endLine":34,"endColumn":61},{"ruleId":"39","severity":1,"message":"40","line":61,"column":21,"nodeType":"41","endLine":61,"endColumn":42},{"ruleId":"39","severity":1,"message":"42","line":74,"column":3,"nodeType":"43","endLine":74,"endColumn":12,"suggestions":"44"},{"ruleId":"35","severity":1,"message":"36","line":79,"column":33,"nodeType":"37","messageId":"38","endLine":79,"endColumn":35},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"43","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'movieData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","React Hook useEffect contains a call to 'setMovie'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [movies, nomList.length, nomTemp] as a second argument to the useEffect Hook.","Identifier",["52"],"no-unused-vars","'useState' is defined but never used.","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],{"desc":"55","fix":"56"},"no-global-assign","no-unsafe-negation","Add dependencies array: [movies, nomList.length, nomTemp]",{"range":"57","text":"58"},[2652,2652],", [movies, nomList.length, nomTemp]"]